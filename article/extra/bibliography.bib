@article{AUER2021106600,
title = {From monolithic systems to Microservices: An assessment framework},
journal = {Information and Software Technology},
volume = {137},
pages = {106600},
year = {2021},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2021.106600},
url = {https://www.sciencedirect.com/science/article/pii/S0950584921000793},
author = {Florian Auer and Valentina Lenarduzzi and Michael Felderer and Davide Taibi},
keywords = {Microservices, Cloud migration, Software measurement},
abstract = {Context:
Re-architecting monolithic systems with Microservices-based architecture is a common trend. Various companies are migrating to Microservices for different reasons. However, making such an important decision like re-architecting an entire system must be based on real facts and not only on gut feelings.
Objective:
The goal of this work is to propose an evidence-based decision support framework for companies that need to migrate to Microservices, based on the analysis of a set of characteristics and metrics they should collect before re-architecting their monolithic system.
Method:
We conducted a survey done in the form of interviews with professionals to derive the assessment framework based on Grounded Theory.
Results:
We identified a set consisting of information and metrics that companies can use to decide whether to migrate to Microservices or not. The proposed assessment framework, based on the aforementioned metrics, could be useful for companies if they need to migrate to Microservices and do not want to run the risk of failing to consider some important information.}
}

@inproceedings{monovsmicro,
author = {Gos, Konrad and Zabierowski, Wojciech},
year = {2020},
month = {04},
pages = {150-153},
title = {The Comparison of Microservice and Monolithic Architecture},
doi = {10.1109/MEMSTECH49584.2020.9109514}
}

@article{app10175797,
AUTHOR = {Tapia, Freddy and Mora, Miguel Ángel and Fuertes, Walter and Aules, Hernán and Flores, Edwin and Toulkeridis, Theofilos},
TITLE = {From Monolithic Systems to Microservices: A Comparative Study of Performance},
JOURNAL = {Applied Sciences},
VOLUME = {10},
YEAR = {2020},
NUMBER = {17},
ARTICLE-NUMBER = {5797},
URL = {https://www.mdpi.com/2076-3417/10/17/5797},
ISSN = {2076-3417},
ABSTRACT = {Currently, organizations face the need to create scalable applications in an agile way that impacts new forms of production and business organization. The traditional monolithic architecture no longer meets the needs of scalability and rapid development. The efficiency and optimization of human and technological resources prevail; this is why companies must adopt new technologies and business strategies. However, the implementation of microservices still encounters several challenges, such as the consumption of time and computational resources, scalability, orchestration, organization problems, and several further technical complications. Although there are procedures that facilitate the migration from a monolithic architecture to micro-services, none of them accurately quantifies performance differences. The current study aims primarily to analyze some related work that evaluated both architectures. Furthermore, we assess the performance and relationship between different variables of an application that runs in a monolithic structure compared to one of the micro-services. With this, the state-of-the-art review was initially conducted, which confirms the interest of the industry. Subsequently, two different scenarios were evaluated: the first one comprises a web application based on a monolithic architecture that operates on a virtual server with KVM, and the second one demonstrates the same web application based on a microservice architecture, but it runs in containers. Both situations were exposed to stress tests of similar characteristics and with the same hardware resources. For their validation, we applied the non-parametric regression mathematical model to explain the dependency relationship between the performance variables. The results provided a quantitative technical interpretation with precision and reliability, which can be applied to similar issues.},
DOI = {10.3390/app10175797}
}

@misc{whatismono,
author = {Rahul Awati, Ivy Wigmore},
howpublished = {https://www.techtarget.com/whatis/definition/monolithic-architecture},
title = {What is monolithic architecture?},
year = {2022}
}

@misc{microservicesdef,
author = {James Lewis, Martin Fowler},
howpublished = {https://martinfowler.com/articles/microservices.html},
title = {Microservices: a definition of this new architectural term},
year = {2014}
}

@inproceedings{10.1145/3538393.3544937,
author = {Dayalan, Udhaya Kumar and Fezeu, Rostand A. K. and Salo, Timothy J. and Zhang, Zhi-Li},
title = {Kaala: Scalable, End-to-End, IoT System Simulator},
year = {2022},
isbn = {9781450393928},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3538393.3544937},
doi = {10.1145/3538393.3544937},
abstract = {We introduce Kaala, a scalable, hybrid, end-to-end IoT system simulator that can integrate with diverse, real-world IoT cloud services. Many IoT simulators run in isolation and do not interface with real-world IoT cloud systems or servers. This isolation makes it difficult for experiments to fully replicate the diversity that exists in end-to-end, real-world systems. Kaala is intended to bridge the gap between IoT simulation experiments and the real world. The simulator can interact with cloud IoT services, such as those offered by Amazon, Microsoft and Google. Kaala leverages vendor-provided software development kits (SDKs) to implement the vendor-specific protocols that are necessary permit simulated IoT devices and gateways to seamlessly communicate with real-world cloud IoT systems. Kaala has the ability to simulate a large number of diverse IoT devices, as well as to simulate events that may simultaneously affect several sensors. Evaluation results show that Kaala is able to, with minimal overhead, seamlessly connect simulated IoT devices to real-world cloud IoT systems.},
booktitle = {Proceedings of the ACM SIGCOMM Workshop on Networked Sensing Systems for a Sustainable Society},
pages = {33–38},
numpages = {6},
keywords = {5G, IoT cloud, IoT gateway SDK, IoT devices, IoT simulator, network},
location = {Amsterdam, Netherlands},
series = {NET4us '22}
}

@article{s10723-018-9468-9,
AUTHOR = {A. Kertesz, T. Pflanzner, T. Gyimothy},
TITLE = {A Mobile IoT Device Simulator for IoT-Fog-Cloud Systems},
JOURNAL = {Journal of Grid Computing},
VOLUME = {17},
YEAR = {2019},
pages = {529–551},
URL = {https://doi.org/10.1007/s10723-018-9468-9},
ISSN = {1572-9184},
ABSTRACT = {The Internet of Things (IoT) is the latest trend of the current ICT evolution, represented by a huge amount of powerful smart devices that have started to appear on the Internet. By responding to this new trend, many cloud providers have started to offer services for IoT management. Recent advances have already shown that cloud computing can be used to serve IoT needs by performing data generation, processing and visualization tasks. In this currently forming ecosystem, IoT system developers need to purchase, connect and configure these devices, and they also have to choose the right infrastructure provider offering the combination of protocols and data structures fitting their applications. In this paper, we propose a complex, semi-simulation environment that aims to provide a solution for these IoT challenges. Our main contribution is the the design of an Android-based, mobile IoT device simulator called MobIoTSim. We also propose a customizable cloud gateway to manage these devices by receiving, processing and visualizing sensor data coming from MobIoTSim. To be as close as possible to real world application, we created an IoT trace archive service called SUMMON, which can be used to gather real-world sensor data, which can be used by MobIoTSim. Finally, we demonstrate how to create IoT applications utilizing numerous IoT devices with this environment, and evaluate the device management scalability and responsiveness of its components.},
DOI = {10.1007/s10723-018-9468-9}
}

@article{ZENG201793,
title = {IOTSim: A simulator for analysing IoT applications},
journal = {Journal of Systems Architecture},
volume = {72},
pages = {93-107},
year = {2017},
note = {Design Automation for Embedded Ubiquitous Computing Systems},
issn = {1383-7621},
doi = {https://doi.org/10.1016/j.sysarc.2016.06.008},
url = {https://www.sciencedirect.com/science/article/pii/S1383762116300662},
author = {Xuezhi Zeng and Saurabh Kumar Garg and Peter Strazdins and Prem Prakash Jayaraman and Dimitrios Georgakopoulos and Rajiv Ranjan},
keywords = {Internet of things (iot), Big data, Mapreduce, Cloud computing, Programming model, Modelling and simulation},
abstract = {A disruptive technology that is influencing not only computing paradigm but every other business is the rise of big data. Internet of Things (IoT) applications are considered to be a major source of big data. Such IoT applications are in general supported through clouds where data is stored and processed by big data processing systems. In order to improve the efficiency of cloud infrastructure so that they can efficiently support IoT big data applications, it is important to understand how these applications and the corresponding big data processing systems will perform in cloud computing environments. However, given the scalability and complex requirements of big data processing systems, an empirical evaluation on actual cloud infrastructure can hinder the development of timely and cost effective IoT solutions. Therefore, a simulator supporting IoT applications in cloud environment is highly demanded, but such work is still in its infancy. To fill this gap, we have designed and implemented IOTSim which supports and enables simulation of IoT big data processing using MapReduce model in cloud computing environment. A real case study validates the efficacy of the simulator.}
}

@INPROCEEDINGS{7004228,
author={Anderson, Jason W. and Kennedy, K. E. and Ngo, Linh B. and Luckow, Andre and Apon, Amy W.},
booktitle={2014 IEEE International Conference on Big Data (Big Data)}, 
title={Synthetic data generation for the internet of things}, 
year={2014},
volume={},
number={},
pages={171-176},
doi={10.1109/BigData.2014.7004228}
}

@phdthesis{chandrinos_thesis,
author = {A. Chandrinos},
school = {Department of Computer Engineering and Informatics, University of Patras},
title = {Upgrading Existing Allergy Symptoms Monitoring Lab Infrastructure (AllergyMap) to Containerized Environment},
year = {2021},
type = {Master's thesis},
url = {http://hdl.handle.net/10889/15581}
}

@misc{whenmicroarebad,
author = {Tomas Fernandez, Dan Ackerson},
howpublished = {https://semaphoreci.com/blog/bad-microservices},
title = {When Microservices Are a Bad Idea},
year = {2022}
}

@article{https://doi.org/10.13140/rg.2.2.23804.51841,
  doi = {10.13140/RG.2.2.23804.51841},
  url = {https://rgdoi.net/10.13140/RG.2.2.23804.51841},
  author = {Mukaj,  Jon},
  language = {en},
  title = {Containerization: Revolutionizing Software Development and Deployment Through Microservices Architecture Using Docker and Kubernetes},
  publisher = {Unpublished},
  year = {2023}
}